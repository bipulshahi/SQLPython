MySQL Assignment
Instructions:

Answer the following questions.
  1. Provide SQL queries wherever necessary.
  2. Submit your answers by [submission deadline].

Part 1: DDL (Data Definition Language)

  1. Define DDL. Explain its role in database management.
    => DDL stands for data definition language. It is used to define and manage all objects in a database, such as tables, indexes, and views.
    => It includes commands like 'CREATE' , 'ALTER' , 'DROP' , and 'TRUNCATE'


  2. Write SQL queries to perform the following DDL operations:
    Create a new database named Company.

=> create database if not exist company

    Create a table named Employees with the following columns:
      EmployeeID (INT, primary key)
      FirstName (VARCHAR)
      LastName (VARCHAR)
      Department (VARCHAR)
      Salary (DECIMAL)
      Add a new column named Email to the Employees table to store email addresses.

=> Create table employees (emp_id int auto_increment primary Key, first_name varchar(50), last_name varchar(50), department varchar(20), salary decimal(10,2));

Part 2: DML (Data Manipulation Language)

    Define DML. How does it differ from DDL?

=> DML stands for data manipulation language. 
=> It is used to rerieve, insert, update and delete data in a database.
=> Unlike DDL, DML manipulates the data within tables, not the table structure itself.


    Write SQL queries to perform the following DML operations:
    Insert 3 records into the Employees table.

=> insert into Employees (first_name , last_name , department , salary) values ( "tarun" , “sethiye", "hr",60000), ("ram" , “singh", "it",15122), ("tara”, “sharma", "finance",61658);

    Update the salary of an employee with EmployeeID 1 to $5000.

=> update Employees set salary = 5000.00 where emp_id = 1;

    Delete the record of an employee with EmployeeID 2.

=> delete from Employees where emp_id = 2;

Part 3: DQL (Data Query Language)

    Define DQL. Explain its significance in database querying.

=> DQL stands for Data Query Language. It is used to query the database and retrieve data from it. The most common DQL is "SELECT".

    Write SQL queries to retrieve the following information:
    Select all columns from the Employees table.

=> select * from Employees

    Select the FirstName and Salary of employees whose salary is greater than $4000.

=> select first_name , salary from Employees where salary > 4000;

Part 4: Joins

    Explain the concept of JOIN in SQL. Provide different types of JOINs.

=> A JOIN clause is used to combine rows from two or more tables based on a related column between them. 
=> Types of Joins include INNER JOIN, LEFT JOIN, RIGHT JOIN & FULL OUTER JOIN

    Write an SQL query to perform an INNER JOIN between the Employees table and another table named Departments, where both tables have a common column DepartmentID.

=> select employees.first_name,employees.last_name,departments.dept_name from employees inner join departments on employees.dept_id =departments.dept_id;

Part 5: Functions

    Explain the difference between inbuilt and user-defined functions in MySQL.

=> Inbuilt functions are pre-defined functions provided by MySQL, such as 'COUNT','SUM','AVG','MAX' and 'MIN'.
=> User defined functions are custome made functions created by user to perform specific task.

    Provide examples of inbuilt functions in MySQL, such as COUNT, SUM, and CONCAT.

=> select sum(salary) from employees;
=> select count(*) from employees;
=> select concat(first_name,' ',last_name) as FullName from employees;

    Define and implement a user-defined function named calculate_bonus that takes an employee's salary as input and returns 10% of the salary as bonus.

-- Change the delimiter to //
DELIMITER //

-- Create the user-defined function with DETERMINISTIC keyword
CREATE FUNCTION calculate_bonus(salary DECIMAL(10, 2)) RETURNS DECIMAL(10, 2)
DETERMINISTIC
BEGIN
    RETURN salary * 0.10;
END //

-- Reset the delimiter to ;
DELIMITER ;

-- Call the function created ---
SELECT calculate_bonus(5000.00) AS Bonus;



Part 6: Stored Procedure

    Define a stored procedure named update_salary that takes an employee ID and a new salary as input and updates the salary of the specified employee in the Employees table.
    Call the update_salary procedure to update the salary of an employee with EmployeeID 3 to $6000.

Part 7: Triggers

    Explain the concept of triggers in MySQL. When are triggers executed?
    Create a trigger named after_employee_insert that automatically inserts a record into a log table named Employee_Logs whenever a new employee is inserted into the Employees table. The log should contain the EmployeeID, FirstName, LastName, and Department of the newly inserted employee, along with the timestamp of the insertion.
